{"ast":null,"code":"var _jsxFileName = \"/home/hitesh/Documents/repos/facite/src/components/Todo.js\";\nimport React, { Component } from \"react\";\nimport { v4 as id } from \"uuid\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport firebase from \"../firebase\";\nimport Auth from \"./Auth\";\nimport Header from \"./Header\";\nimport Submit from \"./Submit\";\nimport TodoElement from \"./TodoElement\";\nconst db = firebase.firestore();\n\nclass Todo extends Component {\n  constructor() {\n    super();\n\n    this.handleTodoChange = e => {\n      e.preventDefault();\n      this.setState({\n        tasks: this.state.tasks,\n        makeTodo: e.target.value\n      });\n      console.log(\"changed\");\n    };\n\n    this.createTodo = e => {\n      e.preventDefault();\n      if (this.state.makeTodo === \"\") return false; //adds to db\n\n      const taskId = id();\n      db.collection(\"todos\").doc(taskId).set({\n        user: this.state.userId,\n        id: taskId,\n        name: this.state.makeTodo\n      });\n      this.setState({\n        tasks: [...this.state.tasks, {\n          user: \"me\",\n          id: taskId,\n          name: this.state.makeTodo\n        }],\n        makeTodo: \"\"\n      });\n      console.log(\"created\");\n    };\n\n    this.deleteTodo = id => {\n      this.setState({\n        tasks: [...this.state.tasks.filter(tasks => tasks.id !== id)]\n      }); //deletes from db\n\n      db.collection(\"todos\").doc(id).delete().catch(error => {\n        console.error(\"Deletion error\", error);\n      });\n    };\n\n    this.authenticate = () => {\n      const provider = new firebase.auth.GoogleAuthProvider();\n      firebase.auth().signInWithRedirect(provider).then(result => {\n        console.log(\"auth\");\n        const userId = result.user.uid;\n        console.log(`id:${userId}`);\n        this.setState({\n          userId: userId\n        });\n        console.log(\"set\");\n      }).catch(function (error) {\n        // Handle Errors here.\n        var errorCode = error.code;\n        console.log(error.message);\n        var errorMessage = error.message; // The email of the user's account used.\n\n        var email = error.email; // The firebase.auth.AuthCredential type that was used.\n\n        var credential = error.credential; // ...\n      }); // firebase.auth().onAuthStateChanged((user) => {\n      //     if(user){\n      //         console.log(\"logged-in\")\n      //     } else {\n      //         console.log(\"not-logged-in\")\n      //     }\n      //});\n    };\n\n    this.state = {\n      tasks: [],\n      makeTodo: \"\"\n    };\n  } //updates the state from firebase\n\n\n  componentDidMount() {\n    console.log(\"mounted\");\n    console.log(this);\n    const retrieved = [];\n    db.collection(\"todos\").get().then(snapshot => {\n      snapshot.forEach(doc => {\n        if (doc.data().user === this.state.userId) {\n          console.log(doc.data());\n          retrieved.push(doc.data());\n          console.log(retrieved);\n        }\n      });\n      this.setState({\n        tasks: [...retrieved]\n      });\n    });\n  } //updates state with value in the input prior to submission\n\n\n  render() {\n    //creates all the todos to be rendered\n    const todos = this.state.tasks.map((tasks, index) => {\n      return /*#__PURE__*/React.createElement(TodoElement, {\n        tasks: tasks,\n        key: index,\n        deleteTodo: this.deleteTodo,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 9\n        }\n      });\n    }); //send the rendered version of the todos and the submit\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      debug: this.state.debug,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Router, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      path: \"/todos\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }\n    }, todos, /*#__PURE__*/React.createElement(Submit, {\n      handleTodoChange: this.handleTodoChange,\n      makeTodo: this.state.makeTodo,\n      createTodo: this.createTodo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Route, {\n      path: \"/auth\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 13\n      }\n    }, \"yeehaw\"), /*#__PURE__*/React.createElement(Auth, {\n      authenticate: this.authenticate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}\n\nexport default Todo;","map":{"version":3,"sources":["/home/hitesh/Documents/repos/facite/src/components/Todo.js"],"names":["React","Component","v4","id","BrowserRouter","Router","Switch","Route","firebase","Auth","Header","Submit","TodoElement","db","firestore","Todo","constructor","handleTodoChange","e","preventDefault","setState","tasks","state","makeTodo","target","value","console","log","createTodo","taskId","collection","doc","set","user","userId","name","deleteTodo","filter","delete","catch","error","authenticate","provider","auth","GoogleAuthProvider","signInWithRedirect","then","result","uid","errorCode","code","message","errorMessage","email","credential","componentDidMount","retrieved","get","snapshot","forEach","data","push","render","todos","map","index","debug"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,EAAE,IAAIC,EAAf,QAAyB,MAAzB;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,MAAlC,EAA0CC,KAA1C,QAAuD,kBAAvD;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,MAAMC,EAAE,GAAGL,QAAQ,CAACM,SAAT,EAAX;;AAEA,MAAMC,IAAN,SAAmBd,SAAnB,CAA6B;AAC3Be,EAAAA,WAAW,GAAG;AACZ;;AADY,SA6BdC,gBA7Bc,GA6BMC,CAAD,IAAO;AACxBA,MAAAA,CAAC,CAACC,cAAF;AACA,WAAKC,QAAL,CAAc;AACZC,QAAAA,KAAK,EAAE,KAAKC,KAAL,CAAWD,KADN;AAEZE,QAAAA,QAAQ,EAAEL,CAAC,CAACM,MAAF,CAASC;AAFP,OAAd;AAIAC,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACD,KApCa;;AAAA,SAuCdC,UAvCc,GAuCAV,CAAD,IAAO;AAClBA,MAAAA,CAAC,CAACC,cAAF;AACA,UAAI,KAAKG,KAAL,CAAWC,QAAX,KAAwB,EAA5B,EAAgC,OAAO,KAAP,CAFd,CAIlB;;AACA,YAAMM,MAAM,GAAG1B,EAAE,EAAjB;AACAU,MAAAA,EAAE,CAACiB,UAAH,CAAc,OAAd,EAAuBC,GAAvB,CAA2BF,MAA3B,EAAmCG,GAAnC,CAAuC;AACrCC,QAAAA,IAAI,EAAE,KAAKX,KAAL,CAAWY,MADoB;AAErC/B,QAAAA,EAAE,EAAE0B,MAFiC;AAGrCM,QAAAA,IAAI,EAAE,KAAKb,KAAL,CAAWC;AAHoB,OAAvC;AAKA,WAAKH,QAAL,CAAc;AACZC,QAAAA,KAAK,EAAE,CACL,GAAG,KAAKC,KAAL,CAAWD,KADT,EAEL;AACEY,UAAAA,IAAI,EAAE,IADR;AAEE9B,UAAAA,EAAE,EAAE0B,MAFN;AAGEM,UAAAA,IAAI,EAAE,KAAKb,KAAL,CAAWC;AAHnB,SAFK,CADK;AASZA,QAAAA,QAAQ,EAAE;AATE,OAAd;AAWAG,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACD,KA9Da;;AAAA,SAiEdS,UAjEc,GAiEAjC,EAAD,IAAQ;AACnB,WAAKiB,QAAL,CAAc;AACZC,QAAAA,KAAK,EAAE,CAAC,GAAG,KAAKC,KAAL,CAAWD,KAAX,CAAiBgB,MAAjB,CAAyBhB,KAAD,IAAWA,KAAK,CAAClB,EAAN,KAAaA,EAAhD,CAAJ;AADK,OAAd,EADmB,CAKnB;;AACAU,MAAAA,EAAE,CAACiB,UAAH,CAAc,OAAd,EACGC,GADH,CACO5B,EADP,EAEGmC,MAFH,GAGGC,KAHH,CAGUC,KAAD,IAAW;AAChBd,QAAAA,OAAO,CAACc,KAAR,CAAc,gBAAd,EAAgCA,KAAhC;AACD,OALH;AAMD,KA7Ea;;AAAA,SAgFdC,YAhFc,GAgFC,MAAM;AACnB,YAAMC,QAAQ,GAAG,IAAIlC,QAAQ,CAACmC,IAAT,CAAcC,kBAAlB,EAAjB;AACApC,MAAAA,QAAQ,CACLmC,IADH,GAEGE,kBAFH,CAEsBH,QAFtB,EAGGI,IAHH,CAGSC,MAAD,IAAY;AAChBrB,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACA,cAAMO,MAAM,GAAGa,MAAM,CAACd,IAAP,CAAYe,GAA3B;AACAtB,QAAAA,OAAO,CAACC,GAAR,CAAa,MAAKO,MAAO,EAAzB;AACA,aAAKd,QAAL,CAAc;AAAEc,UAAAA,MAAM,EAAEA;AAAV,SAAd;AACAR,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACD,OATH,EAUGY,KAVH,CAUS,UAAUC,KAAV,EAAiB;AACtB;AACA,YAAIS,SAAS,GAAGT,KAAK,CAACU,IAAtB;AACAxB,QAAAA,OAAO,CAACC,GAAR,CAAYa,KAAK,CAACW,OAAlB;AACA,YAAIC,YAAY,GAAGZ,KAAK,CAACW,OAAzB,CAJsB,CAKtB;;AACA,YAAIE,KAAK,GAAGb,KAAK,CAACa,KAAlB,CANsB,CAOtB;;AACA,YAAIC,UAAU,GAAGd,KAAK,CAACc,UAAvB,CARsB,CAStB;AACD,OApBH,EAFmB,CAwBnB;AACA;AACA;AACA;AACA;AACA;AACA;AACD,KA/Ga;;AAEZ,SAAKhC,KAAL,GAAa;AACXD,MAAAA,KAAK,EAAE,EADI;AAEXE,MAAAA,QAAQ,EAAE;AAFC,KAAb;AAID,GAP0B,CAS3B;;;AACAgC,EAAAA,iBAAiB,GAAG;AAClB7B,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACA,UAAM6B,SAAS,GAAG,EAAlB;AACA3C,IAAAA,EAAE,CAACiB,UAAH,CAAc,OAAd,EACG2B,GADH,GAEGX,IAFH,CAESY,QAAD,IAAc;AAClBA,MAAAA,QAAQ,CAACC,OAAT,CAAkB5B,GAAD,IAAS;AACxB,YAAIA,GAAG,CAAC6B,IAAJ,GAAW3B,IAAX,KAAoB,KAAKX,KAAL,CAAWY,MAAnC,EAA2C;AACzCR,UAAAA,OAAO,CAACC,GAAR,CAAYI,GAAG,CAAC6B,IAAJ,EAAZ;AACAJ,UAAAA,SAAS,CAACK,IAAV,CAAe9B,GAAG,CAAC6B,IAAJ,EAAf;AACAlC,UAAAA,OAAO,CAACC,GAAR,CAAY6B,SAAZ;AACD;AACF,OAND;AAOA,WAAKpC,QAAL,CAAc;AACZC,QAAAA,KAAK,EAAE,CAAC,GAAGmC,SAAJ;AADK,OAAd;AAGD,KAbH;AAcD,GA5B0B,CA6B3B;;;AAqFAM,EAAAA,MAAM,GAAG;AACP;AACA,UAAMC,KAAK,GAAG,KAAKzC,KAAL,CAAWD,KAAX,CAAiB2C,GAAjB,CAAqB,CAAC3C,KAAD,EAAQ4C,KAAR,KAAkB;AACnD,0BACE,oBAAC,WAAD;AAAa,QAAA,KAAK,EAAE5C,KAApB;AAA2B,QAAA,GAAG,EAAE4C,KAAhC;AAAuC,QAAA,UAAU,EAAE,KAAK7B,UAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAGD,KAJa,CAAd,CAFO,CAQP;;AACA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAE,KAAKd,KAAL,CAAW4C,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGH,KADH,eAEE,oBAAC,MAAD;AACE,MAAA,gBAAgB,EAAE,KAAK9C,gBADzB;AAEE,MAAA,QAAQ,EAAE,KAAKK,KAAL,CAAWC,QAFvB;AAGE,MAAA,UAAU,EAAE,KAAKK,UAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,eASE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,oBAAC,IAAD;AAAM,MAAA,YAAY,EAAE,KAAKa,YAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CATF,CAFF,CADF;AAmBD;;AA9I0B;;AAiJ7B,eAAe1B,IAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { v4 as id } from \"uuid\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport firebase from \"../firebase\";\nimport Auth from \"./Auth\";\nimport Header from \"./Header\";\nimport Submit from \"./Submit\";\nimport TodoElement from \"./TodoElement\";\n\nconst db = firebase.firestore();\n\nclass Todo extends Component {\n  constructor() {\n    super();\n    this.state = {\n      tasks: [],\n      makeTodo: \"\",\n    };\n  }\n\n  //updates the state from firebase\n  componentDidMount() {\n    console.log(\"mounted\");\n    console.log(this);\n    const retrieved = [];\n    db.collection(\"todos\")\n      .get()\n      .then((snapshot) => {\n        snapshot.forEach((doc) => {\n          if (doc.data().user === this.state.userId) {\n            console.log(doc.data());\n            retrieved.push(doc.data());\n            console.log(retrieved);\n          }\n        });\n        this.setState({\n          tasks: [...retrieved],\n        });\n      });\n  }\n  //updates state with value in the input prior to submission\n  handleTodoChange = (e) => {\n    e.preventDefault();\n    this.setState({\n      tasks: this.state.tasks,\n      makeTodo: e.target.value,\n    });\n    console.log(\"changed\");\n  };\n\n  //creates a todo by adding it to the state and displays it\n  createTodo = (e) => {\n    e.preventDefault();\n    if (this.state.makeTodo === \"\") return false;\n\n    //adds to db\n    const taskId = id();\n    db.collection(\"todos\").doc(taskId).set({\n      user: this.state.userId,\n      id: taskId,\n      name: this.state.makeTodo,\n    });\n    this.setState({\n      tasks: [\n        ...this.state.tasks,\n        {\n          user: \"me\",\n          id: taskId,\n          name: this.state.makeTodo,\n        },\n      ],\n      makeTodo: \"\",\n    });\n    console.log(\"created\");\n  };\n\n  //removes todo from state\n  deleteTodo = (id) => {\n    this.setState({\n      tasks: [...this.state.tasks.filter((tasks) => tasks.id !== id)],\n    });\n\n    //deletes from db\n    db.collection(\"todos\")\n      .doc(id)\n      .delete()\n      .catch((error) => {\n        console.error(\"Deletion error\", error);\n      });\n  };\n\n  //auths a user and pushes uid to state\n  authenticate = () => {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    firebase\n      .auth()\n      .signInWithRedirect(provider)\n      .then((result) => {\n        console.log(\"auth\");\n        const userId = result.user.uid;\n        console.log(`id:${userId}`);\n        this.setState({ userId: userId });\n        console.log(\"set\");\n      })\n      .catch(function (error) {\n        // Handle Errors here.\n        var errorCode = error.code;\n        console.log(error.message);\n        var errorMessage = error.message;\n        // The email of the user's account used.\n        var email = error.email;\n        // The firebase.auth.AuthCredential type that was used.\n        var credential = error.credential;\n        // ...\n      });\n\n    // firebase.auth().onAuthStateChanged((user) => {\n    //     if(user){\n    //         console.log(\"logged-in\")\n    //     } else {\n    //         console.log(\"not-logged-in\")\n    //     }\n    //});\n  };\n\n  render() {\n    //creates all the todos to be rendered\n    const todos = this.state.tasks.map((tasks, index) => {\n      return (\n        <TodoElement tasks={tasks} key={index} deleteTodo={this.deleteTodo} />\n      );\n    });\n\n    //send the rendered version of the todos and the submit\n    return (\n      <div>\n        <Header debug={this.state.debug} />\n        <Router>\n          <Route path=\"/todos\">\n            {todos}\n            <Submit\n              handleTodoChange={this.handleTodoChange}\n              makeTodo={this.state.makeTodo}\n              createTodo={this.createTodo}\n            />\n          </Route>\n          <Route path=\"/auth\">\n            <h2>yeehaw</h2>\n            <Auth authenticate={this.authenticate} />\n          </Route>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default Todo;\n"]},"metadata":{},"sourceType":"module"}
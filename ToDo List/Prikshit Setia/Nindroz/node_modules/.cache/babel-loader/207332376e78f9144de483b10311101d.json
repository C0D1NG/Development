{"ast":null,"code":"var _jsxFileName = \"/home/hitesh/Documents/repos/facite/src/components/Todo.js\";\nimport React, { Component } from 'react';\nimport { v4 as id } from 'uuid';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport firebase from '../firebase';\nimport Auth from './Auth';\nimport Header from './Header';\nimport Submit from './Submit';\nimport TodoElement from './TodoElement';\nconst db = firebase.firestore();\n\nclass Todo extends Component {\n  constructor() {\n    super();\n\n    this.handleTodoChange = e => {\n      e.preventDefault();\n      this.setState({\n        tasks: this.state.tasks,\n        makeTodo: e.target.value\n      });\n      console.log(\"changed\");\n    };\n\n    this.createTodo = e => {\n      e.preventDefault();\n      if (this.state.makeTodo === \"\") return false; //adds to db\n\n      const taskId = id();\n      db.collection('todos').doc(taskId).set({\n        user: 'me',\n        id: taskId,\n        name: this.state.makeTodo\n      });\n      this.setState({\n        tasks: [...this.state.tasks, {\n          user: 'me',\n          id: taskId,\n          name: this.state.makeTodo\n        }],\n        makeTodo: \"\"\n      });\n      console.log(\"created\");\n    };\n\n    this.deleteTodo = id => {\n      this.setState({\n        tasks: [...this.state.tasks.filter(tasks => tasks.id !== id)]\n      }); //deletes from db\n\n      db.collection('todos').doc(id).delete().catch(error => {\n        console.error(\"Deletion error\", error);\n      });\n    };\n\n    this.state = {\n      tasks: [],\n      makeTodo: ''\n    };\n  } //updates the state from firebase\n\n\n  componentDidMount() {\n    console.log('mounted');\n    const retrieved = [];\n    db.collection(\"todos\").get().then(snapshot => {\n      snapshot.forEach(doc => {\n        if (doc.data().user === \"me\") {\n          console.log(doc.data());\n          retrieved.push(doc.data());\n          console.log(retrieved);\n        }\n      });\n      this.setState({\n        tasks: [...retrieved]\n      });\n    });\n  } //updates state with value in the input prior to submission\n\n\n  render() {\n    //creates all the todos to be rendered\n    const todos = this.state.tasks.map((tasks, index) => {\n      return /*#__PURE__*/React.createElement(TodoElement, {\n        tasks: tasks,\n        key: index,\n        deleteTodo: this.deleteTodo,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 17\n        }\n      });\n    }); //send the rendered version of the todos and the submit\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      debug: this.state.debug,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Router, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      path: \"/todos\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }\n    }, todos, /*#__PURE__*/React.createElement(Submit, {\n      handleTodoChange: this.handleTodoChange,\n      makeTodo: this.state.makeTodo,\n      createTodo: this.createTodo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Route, {\n      path: \"/auth\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 25\n      }\n    }, \"yeehaw\"), /*#__PURE__*/React.createElement(Auth, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 25\n      }\n    }))));\n  }\n\n}\n\nexport default Todo;","map":{"version":3,"sources":["/home/hitesh/Documents/repos/facite/src/components/Todo.js"],"names":["React","Component","v4","id","BrowserRouter","Router","Switch","Route","firebase","Auth","Header","Submit","TodoElement","db","firestore","Todo","constructor","handleTodoChange","e","preventDefault","setState","tasks","state","makeTodo","target","value","console","log","createTodo","taskId","collection","doc","set","user","name","deleteTodo","filter","delete","catch","error","componentDidMount","retrieved","get","then","snapshot","forEach","data","push","render","todos","map","index","debug"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,EAAE,IAAIC,EAAf,QAAyB,MAAzB;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,MAAlC,EAA0CC,KAA1C,QAAuD,kBAAvD;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,MAAMC,EAAE,GAAGL,QAAQ,CAACM,SAAT,EAAX;;AAEA,MAAMC,IAAN,SAAmBd,SAAnB,CAA6B;AACzBe,EAAAA,WAAW,GAAG;AACV;;AADU,SA2BdC,gBA3Bc,GA2BMC,CAAD,IAAO;AACtBA,MAAAA,CAAC,CAACC,cAAF;AACA,WAAKC,QAAL,CAAc;AACVC,QAAAA,KAAK,EAAE,KAAKC,KAAL,CAAWD,KADR;AAEVE,QAAAA,QAAQ,EAAEL,CAAC,CAACM,MAAF,CAASC;AAFT,OAAd;AAIAC,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACH,KAlCa;;AAAA,SAqCdC,UArCc,GAqCAV,CAAD,IAAO;AAChBA,MAAAA,CAAC,CAACC,cAAF;AACA,UAAI,KAAKG,KAAL,CAAWC,QAAX,KAAwB,EAA5B,EAAgC,OAAO,KAAP,CAFhB,CAIhB;;AACA,YAAMM,MAAM,GAAG1B,EAAE,EAAjB;AACAU,MAAAA,EAAE,CAACiB,UAAH,CAAc,OAAd,EAAuBC,GAAvB,CAA2BF,MAA3B,EAAmCG,GAAnC,CAAuC;AACnCC,QAAAA,IAAI,EAAC,IAD8B;AAEnC9B,QAAAA,EAAE,EAAE0B,MAF+B;AAGnCK,QAAAA,IAAI,EAAE,KAAKZ,KAAL,CAAWC;AAHkB,OAAvC;AAKA,WAAKH,QAAL,CAAc;AACVC,QAAAA,KAAK,EAAE,CACH,GAAG,KAAKC,KAAL,CAAWD,KADX,EAEH;AACIY,UAAAA,IAAI,EAAC,IADT;AAEI9B,UAAAA,EAAE,EAAE0B,MAFR;AAGIK,UAAAA,IAAI,EAAE,KAAKZ,KAAL,CAAWC;AAHrB,SAFG,CADG;AASVA,QAAAA,QAAQ,EAAE;AATA,OAAd;AAWAG,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACH,KA5Da;;AAAA,SA+DdQ,UA/Dc,GA+DDhC,EAAE,IAAI;AACf,WAAKiB,QAAL,CAAc;AAAEC,QAAAA,KAAK,EAAE,CAAC,GAAG,KAAKC,KAAL,CAAWD,KAAX,CAAiBe,MAAjB,CAAwBf,KAAK,IAAIA,KAAK,CAAClB,EAAN,KAAaA,EAA9C,CAAJ;AAAT,OAAd,EADe,CAGf;;AACAU,MAAAA,EAAE,CAACiB,UAAH,CAAc,OAAd,EAAuBC,GAAvB,CAA2B5B,EAA3B,EAA+BkC,MAA/B,GAAwCC,KAAxC,CAA8CC,KAAK,IAAG;AAACb,QAAAA,OAAO,CAACa,KAAR,CAAc,gBAAd,EAAgCA,KAAhC;AAAuC,OAA9F;AAEH,KArEa;;AAEV,SAAKjB,KAAL,GAAa;AACTD,MAAAA,KAAK,EAAE,EADE;AAGTE,MAAAA,QAAQ,EAAE;AAHD,KAAb;AAKH,GARwB,CAUzB;;;AACAiB,EAAAA,iBAAiB,GAAG;AAChBd,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACA,UAAMc,SAAS,GAAG,EAAlB;AACA5B,IAAAA,EAAE,CAACiB,UAAH,CAAc,OAAd,EAAuBY,GAAvB,GAA6BC,IAA7B,CAAmCC,QAAD,IAAc;AAC5CA,MAAAA,QAAQ,CAACC,OAAT,CAAkBd,GAAD,IAAS;AACtB,YAAGA,GAAG,CAACe,IAAJ,GAAWb,IAAX,KAAkB,IAArB,EAA0B;AACtBP,UAAAA,OAAO,CAACC,GAAR,CAAYI,GAAG,CAACe,IAAJ,EAAZ;AACAL,UAAAA,SAAS,CAACM,IAAV,CAAehB,GAAG,CAACe,IAAJ,EAAf;AACApB,UAAAA,OAAO,CAACC,GAAR,CAAYc,SAAZ;AACH;AACJ,OAND;AAOA,WAAKrB,QAAL,CAAc;AACVC,QAAAA,KAAK,EAAC,CAAC,GAAGoB,SAAJ;AADI,OAAd;AAGH,KAXD;AAYH,GA1BwB,CA2BzB;;;AA+CAO,EAAAA,MAAM,GAAG;AAEL;AACA,UAAMC,KAAK,GAAG,KAAK3B,KAAL,CAAWD,KAAX,CAAiB6B,GAAjB,CAAqB,CAAC7B,KAAD,EAAQ8B,KAAR,KAAkB;AACjD,0BACI,oBAAC,WAAD;AAAa,QAAA,KAAK,EAAE9B,KAApB;AAA2B,QAAA,GAAG,EAAE8B,KAAhC;AAAuC,QAAA,UAAU,EAAE,KAAKhB,UAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAGH,KAJa,CAAd,CAHK,CASL;;AACA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAE,KAAKb,KAAL,CAAW8B,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKH,KADL,eAEI,oBAAC,MAAD;AAAQ,MAAA,gBAAgB,EAAE,KAAKhC,gBAA/B;AAAiD,MAAA,QAAQ,EAAE,KAAKK,KAAL,CAAWC,QAAtE;AAAgF,MAAA,UAAU,EAAE,KAAKK,UAAjG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ,eAKI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CALJ,CAFJ,CADJ;AAgBH;;AApGwB;;AAyG7B,eAAeb,IAAf","sourcesContent":["import React, { Component } from 'react'\nimport { v4 as id } from 'uuid';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport firebase from '../firebase'\nimport Auth from './Auth'\nimport Header from './Header'\nimport Submit from './Submit'\nimport TodoElement from './TodoElement'\n\nconst db = firebase.firestore()\n\nclass Todo extends Component {\n    constructor() {\n        super()\n        this.state = {\n            tasks: [\n            ],\n            makeTodo: ''\n        }\n    }\n\n    //updates the state from firebase\n    componentDidMount() {\n        console.log('mounted')\n        const retrieved = []\n        db.collection(\"todos\").get().then((snapshot) => {\n            snapshot.forEach((doc) => {\n                if(doc.data().user===\"me\"){\n                    console.log(doc.data());\n                    retrieved.push(doc.data())\n                    console.log(retrieved)\n                }\n            });\n            this.setState({\n                tasks:[...retrieved]\n            })\n        });\n    }\n    //updates state with value in the input prior to submission\n    handleTodoChange = (e) => {\n        e.preventDefault()\n        this.setState({\n            tasks: this.state.tasks,\n            makeTodo: e.target.value\n        })\n        console.log(\"changed\")\n    }\n\n    //creates a todo by adding it to the state and displays it\n    createTodo = (e) => {\n        e.preventDefault()\n        if (this.state.makeTodo === \"\") return false;\n\n        //adds to db\n        const taskId = id()\n        db.collection('todos').doc(taskId).set({\n            user:'me',\n            id: taskId,\n            name: this.state.makeTodo\n        })\n        this.setState({\n            tasks: [\n                ...this.state.tasks,\n                {\n                    user:'me' ,\n                    id: taskId,\n                    name: this.state.makeTodo\n                }\n            ],\n            makeTodo: \"\"\n        })\n        console.log(\"created\")\n    }\n\n    //removes todo from state\n    deleteTodo = id => {\n        this.setState({ tasks: [...this.state.tasks.filter(tasks => tasks.id !== id)] })\n    \n        //deletes from db\n        db.collection('todos').doc(id).delete().catch(error=> {console.error(\"Deletion error\", error)})\n\n    }\n    \n\n\n    render() {\n\n        //creates all the todos to be rendered\n        const todos = this.state.tasks.map((tasks, index) => {\n            return (\n                <TodoElement tasks={tasks} key={index} deleteTodo={this.deleteTodo} />\n            )\n        })\n\n        //send the rendered version of the todos and the submit\n        return (\n            <div >\n                <Header debug={this.state.debug} />\n                <Router>\n                    <Route path=\"/todos\">\n                        {todos}\n                        <Submit handleTodoChange={this.handleTodoChange} makeTodo={this.state.makeTodo} createTodo={this.createTodo} />\n                    </Route>\n                    <Route path='/auth'>\n                        <h2>yeehaw</h2>\n                        <Auth></Auth>\n                    </Route>\n                    \n                </Router>\n            </div>\n        )\n    }\n}\n\n\n\nexport default Todo;"]},"metadata":{},"sourceType":"module"}
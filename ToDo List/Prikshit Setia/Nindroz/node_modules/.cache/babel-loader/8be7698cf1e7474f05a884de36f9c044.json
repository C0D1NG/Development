{"ast":null,"code":"import validate from './validate.js';\n\nfunction parse(uuid) {\n  if (!validate(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  var v;\n  var arr = new Uint8Array(16); // Parse ########-....-....-....-............\n\n  arr[0] = (v = parseInt(uuid.slice(0, 8), 16)) >>> 24;\n  arr[1] = v >>> 16 & 0xff;\n  arr[2] = v >>> 8 & 0xff;\n  arr[3] = v & 0xff; // Parse ........-####-....-....-............\n\n  arr[4] = (v = parseInt(uuid.slice(9, 13), 16)) >>> 8;\n  arr[5] = v & 0xff; // Parse ........-....-####-....-............\n\n  arr[6] = (v = parseInt(uuid.slice(14, 18), 16)) >>> 8;\n  arr[7] = v & 0xff; // Parse ........-....-....-####-............\n\n  arr[8] = (v = parseInt(uuid.slice(19, 23), 16)) >>> 8;\n  arr[9] = v & 0xff; // Parse ........-....-....-....-############\n  // (Use \"/\" to avoid 32-bit truncation when bit-shifting high-order bytes)\n\n  arr[10] = (v = parseInt(uuid.slice(24, 36), 16)) / 0x10000000000 & 0xff;\n  arr[11] = v / 0x100000000 & 0xff;\n  arr[12] = v >>> 24 & 0xff;\n  arr[13] = v >>> 16 & 0xff;\n  arr[14] = v >>> 8 & 0xff;\n  arr[15] = v & 0xff;\n  return arr;\n}\n\nexport default parse;","map":{"version":3,"sources":["/home/hitesh/Documents/repos/facite/node_modules/uuid/dist/esm-browser/parse.js"],"names":["validate","parse","uuid","TypeError","v","arr","Uint8Array","parseInt","slice"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,eAArB;;AAEA,SAASC,KAAT,CAAeC,IAAf,EAAqB;AACnB,MAAI,CAACF,QAAQ,CAACE,IAAD,CAAb,EAAqB;AACnB,UAAMC,SAAS,CAAC,cAAD,CAAf;AACD;;AAED,MAAIC,CAAJ;AACA,MAAIC,GAAG,GAAG,IAAIC,UAAJ,CAAe,EAAf,CAAV,CANmB,CAMW;;AAE9BD,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAACD,CAAC,GAAGG,QAAQ,CAACL,IAAI,CAACM,KAAL,CAAW,CAAX,EAAc,CAAd,CAAD,EAAmB,EAAnB,CAAb,MAAyC,EAAlD;AACAH,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASD,CAAC,KAAK,EAAN,GAAW,IAApB;AACAC,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASD,CAAC,KAAK,CAAN,GAAU,IAAnB;AACAC,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASD,CAAC,GAAG,IAAb,CAXmB,CAWA;;AAEnBC,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAACD,CAAC,GAAGG,QAAQ,CAACL,IAAI,CAACM,KAAL,CAAW,CAAX,EAAc,EAAd,CAAD,EAAoB,EAApB,CAAb,MAA0C,CAAnD;AACAH,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASD,CAAC,GAAG,IAAb,CAdmB,CAcA;;AAEnBC,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAACD,CAAC,GAAGG,QAAQ,CAACL,IAAI,CAACM,KAAL,CAAW,EAAX,EAAe,EAAf,CAAD,EAAqB,EAArB,CAAb,MAA2C,CAApD;AACAH,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASD,CAAC,GAAG,IAAb,CAjBmB,CAiBA;;AAEnBC,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAACD,CAAC,GAAGG,QAAQ,CAACL,IAAI,CAACM,KAAL,CAAW,EAAX,EAAe,EAAf,CAAD,EAAqB,EAArB,CAAb,MAA2C,CAApD;AACAH,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASD,CAAC,GAAG,IAAb,CApBmB,CAoBA;AACnB;;AAEAC,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAU,CAACD,CAAC,GAAGG,QAAQ,CAACL,IAAI,CAACM,KAAL,CAAW,EAAX,EAAe,EAAf,CAAD,EAAqB,EAArB,CAAb,IAAyC,aAAzC,GAAyD,IAAnE;AACAH,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAUD,CAAC,GAAG,WAAJ,GAAkB,IAA5B;AACAC,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAUD,CAAC,KAAK,EAAN,GAAW,IAArB;AACAC,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAUD,CAAC,KAAK,EAAN,GAAW,IAArB;AACAC,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAUD,CAAC,KAAK,CAAN,GAAU,IAApB;AACAC,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAUD,CAAC,GAAG,IAAd;AACA,SAAOC,GAAP;AACD;;AAED,eAAeJ,KAAf","sourcesContent":["import validate from './validate.js';\n\nfunction parse(uuid) {\n  if (!validate(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  var v;\n  var arr = new Uint8Array(16); // Parse ########-....-....-....-............\n\n  arr[0] = (v = parseInt(uuid.slice(0, 8), 16)) >>> 24;\n  arr[1] = v >>> 16 & 0xff;\n  arr[2] = v >>> 8 & 0xff;\n  arr[3] = v & 0xff; // Parse ........-####-....-....-............\n\n  arr[4] = (v = parseInt(uuid.slice(9, 13), 16)) >>> 8;\n  arr[5] = v & 0xff; // Parse ........-....-####-....-............\n\n  arr[6] = (v = parseInt(uuid.slice(14, 18), 16)) >>> 8;\n  arr[7] = v & 0xff; // Parse ........-....-....-####-............\n\n  arr[8] = (v = parseInt(uuid.slice(19, 23), 16)) >>> 8;\n  arr[9] = v & 0xff; // Parse ........-....-....-....-############\n  // (Use \"/\" to avoid 32-bit truncation when bit-shifting high-order bytes)\n\n  arr[10] = (v = parseInt(uuid.slice(24, 36), 16)) / 0x10000000000 & 0xff;\n  arr[11] = v / 0x100000000 & 0xff;\n  arr[12] = v >>> 24 & 0xff;\n  arr[13] = v >>> 16 & 0xff;\n  arr[14] = v >>> 8 & 0xff;\n  arr[15] = v & 0xff;\n  return arr;\n}\n\nexport default parse;"]},"metadata":{},"sourceType":"module"}